{"version":3,"sources":["components/DropdownOptions.js","components/DropdownOptions2.js","components/ScatterChart.js","components/App.js","index.js"],"names":["DropdownOptions","state","handleChange","e","_ref","value","_this","setState","props","getDropdownValue","this","react_default","a","createElement","Dropdown","onChange","bind","options","placeholder","selection","fluid","React","Component","DropdownOptions2","getDropdownValue2","ScatterChart","index_esm","height","chartType","loader","data","dataObjs","title","y_var","x_var","titleTextStyle","color","fontSize","bold","italic","hAxis","vAxis","chartArea","width","tooltip","isHtml","trigger","legend","textStyle","maxLines","trendlines","display_trend","0","type","showR2","visibleInLegend","rootProps","data-testid","VAR2_NAMES","VAR1_NAMES","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","option1","option2","populateArray","items","variables","items2","variables2","plotData","plotData2","normalize","dataReady","_this2","fetch","then","response","json","batchRowValues","valueRanges","values","rows","i","length","rowObject","j","push","cols","colNameArray","colObject","toString","var1","var2","plotDataTemp","role","p","html","sheet1","sheet2","pairArray","num1","num2","splice","parseInt","className","Grid","centered","columns","Column","Segment","components_ScatterChart","Message","Header","components_DropdownOptions","components_DropdownOptions2","styleLink","document","rel","href","head","appendChild","ReactDOM","render","components_App","querySelector"],"mappings":"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","file":"static/js/main.e61e310d.chunk.js","sourcesContent":["import React from 'react';\nimport { Dropdown, Grid, Segment } from 'semantic-ui-react'\n\nclass DropdownOptions extends React.Component {\n  state = {}\n\n  handleChange = (e, { value }) => {\n    this.setState({ value });\n    this.props.getDropdownValue(value);\n  }\n\n  render() {\n    const { value } = this.state;\n    return (\n          <Dropdown\n            onChange={this.handleChange.bind(this)}\n            options={this.props.options}\n            placeholder='Choose an option'\n            selection\n            value={value}\n            fluid\n          />\n    )\n  }\n}\n\nexport default DropdownOptions;","import React from 'react';\nimport { Dropdown, Grid, Segment } from 'semantic-ui-react'\n\nclass DropdownOptions2 extends React.Component {\n  state = {}\n\n  handleChange = (e, { value }) => {\n    this.setState({ value });\n    this.props.getDropdownValue2(value);\n  }\n\n  render() {\n    const { value } = this.state;\n    return (\n\n          <Dropdown\n            onChange={this.handleChange.bind(this)}\n            options={this.props.options}\n            placeholder='Choose an option'\n            selection\n            value={value}\n            fluid\n          />   \n    )\n  }\n}\n\nexport default DropdownOptions2;","import React, {Component} from 'react'\nimport Chart from 'react-google-charts'\n\n\nclass ScatterChart extends Component {\n\n  render(){\n\n\n    return(\n\n      <Chart\n        // width={'900px'}\n        height={'500px'}\n        chartType=\"ScatterChart\"\n        loader={<div>Loading Chart</div>}\n        data={this.props.dataObjs}\n\n        options={{\n          title: this.props.y_var + ' versus ' + this.props.x_var,\n          titleTextStyle: {\n            color: 'black',    \n            // fontName: 'Times New Roman', \n            fontSize: 16, // 12, 18 (don't specify px)\n            bold: false,    \n            italic: false   \n          },\n          hAxis: { title: this.props.x_var },\n          vAxis: { title: this.props.y_var },\n          chartArea: { width: '60%', height: '80%'},\n          tooltip: { isHtml: true, trigger: \"visible\" },\n          // legend: 'none',\n          legend: {\n            textStyle: {color: 'black', fontSize: 12},\n            maxLines: 5\n          },\n          trendlines: this.props.display_trend && { \n            0: {\n              tooltip: false,\n              type: 'linear',\n              showR2: true,\n              visibleInLegend: true\n            }\n          },\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />\n\n\n    );\n  }\n}\n\nexport default ScatterChart","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DropdownOptions from './DropdownOptions';\nimport DropdownOptions2 from './DropdownOptions2';\nimport ScatterChart from './ScatterChart';\nimport \"./style.css\";\nimport {Grid, Segment, Message, Header} from 'semantic-ui-react'\n\nconst API2 = 'https://sheets.googleapis.com/v4/spreadsheets/1Cwqkp0fNeizSnDqpmFbsPyn7z4auvaAiO_5G3tPv9bM/values:batchGet?ranges=export_counties&majorDimension=ROWS&key=AIzaSyB0CGGN8RdsTmZ2gqnuHDuik_lhuN6LxBY'\nconst API = 'https://sheets.googleapis.com/v4/spreadsheets/1epp9BjgaPSrHKh-PqIaD-mjB5nH6s19_Fz5Q8yx_Cl8/values:batchGet?ranges=export4&majorDimension=ROWS&key=AIzaSyB0CGGN8RdsTmZ2gqnuHDuik_lhuN6LxBY'\n\nconst VAR2_NAMES = [\n  \"geoid\",\n  \"place\",\n  \"Number of people below poverty level in the past 12 months (male)\",\n  \"Number of people who are foreign born\",\n  \"Number of people born in state of residence\",\n  \"Number of people below poverty level in the past 12 months (female)\",\n  \"Vacant housing unit\",\n  \"Number of people born in other state in the US\",\n  \"Deaths due to nervous system diseases\",\n  \"Deaths due to external causes\",\n  \"Number of Asians\",\n  \"Deaths due to neoplasm diseases\",\n  \"Number of Hispanic or Latinos\",\n  \"Number of Whites\",\n  \"Deaths due to circulatory system diseases\",\n  \"Number of Blacks or African Americans\"\n];\n\nconst VAR1_NAMES = [\n  \"geoid\",\n  \"place\",\n  \"Number of people with no schooling completed\",\n  \"Number of people with Master's Degree\",\n  \"Number of people with Doctorate Degree\",\n  \"Number of people with Associates Degree\",\n  \"Number of people with Bachelor's Degree\",\n  \"Number of Males\",\n  \"Number of Females\",\n  \"County Population\"\n];\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n     items:[],\n     variables:[],\n     items2:[],\n     variables2:[],\n     option1: '',\n     option2: '',\n     plotData: [],\n     plotData2: [],\n     normalize: false,\n     dataReady: false  // load the scatterplot only when the data is ready\n    };\n\n  }\n\n   // The two for loops converts array of individual row arrays into an array of objects for each row\n  componentDidMount(){\n\n     fetch(API).then(response => response.json()).then(data => {\n      let batchRowValues = data.valueRanges[0].values;\n      batchRowValues[0] = VAR1_NAMES; // replace variable names\n      const rows = [];\n      for (let i = 1; i < batchRowValues.length; i++) {\n        let rowObject = {};\n        for (let j = 0; j < batchRowValues[i].length; j++) {\n          rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n\n        }\n        rows.push(rowObject);\n      }\n      const cols = [];\n      let colNameArray = data.valueRanges[0].values[0];\n      for (let i = 0; i < colNameArray.length; i++) {\n        if (colNameArray[i] !== 'geoid' && colNameArray[i] !== 'place') {  // Remove geoID and place from options\n          let colObject = {};\n          colObject['key'] = i.toString();\n          colObject['text'] = colNameArray[i]; \n          colObject['value'] = colNameArray[i];\n          cols.push(colObject);\n        } \n      }\n      this.setState({ \n        items: rows,\n        variables: cols\n      });\n    });\n\n     fetch(API2).then(response => response.json()).then(data => {\n      let batchRowValues = data.valueRanges[0].values;\n      batchRowValues[0] = VAR2_NAMES; \n      const rows = [];\n      for (let i = 1; i < batchRowValues.length; i++) {\n        let rowObject = {};\n        for (let j = 0; j < batchRowValues[i].length; j++) {\n          rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n        }\n        rows.push(rowObject);\n      }\n      const cols = [];\n      let colNameArray = data.valueRanges[0].values[0];\n      for (let i = 0; i < colNameArray.length; i++) {\n        if (colNameArray[i] !== 'geoid' && colNameArray[i] !== 'place') {  // Remove geoID and place from options\n          let colObject = {};\n          colObject['key'] = i.toString();\n          colObject['text'] = colNameArray[i];\n          colObject['value'] = colNameArray[i];\n          cols.push(colObject);\n        } \n      }\n      this.setState({ \n        items2: rows,\n        variables2: cols\n      });\n    });\n\n  }\n\n  populateArray() {\n    let var1 = this.state.option1;\n    let var2 = this.state.option2;\n    let plotDataTemp = [];\n    plotDataTemp.push([var1, var2, { role: \"tooltip\", type: \"string\", p: { html: true } } ]);\n    \n    if (var1 !== '' && var2 !== '') {\n      let sheet1 = this.state.items;\n      let sheet2 = this.state.items2;\n\n      for (let i = 0; i < sheet1.length; i++) {\n        let pairArray = [];\n        let num1 = sheet1[i][var1];\n        let num2 = 0;\n\n        if (sheet1[i][var1]!== \"\") {\n          pairArray.splice(0, 0, parseInt(sheet1[i][var1]));\n        }\n        \n        for (let j = 0; j < sheet2.length; j++) {  // i = j bc the two spreadsheets have the same counties on each row\n          if (sheet2[j]['geoid'] === sheet1[i]['geoid']) {\n            num2 = sheet2[j][var2];\n            if (sheet2[j][var2]!== \"\") {\n              pairArray.splice(1, 0, parseInt(sheet2[j][var2]));\n            }\n            break;\n          }\n        }\n        if (pairArray.length > 1) {\n          pairArray.splice(2, 0, sheet2[i]['place'] + \", (\" + num1 + \", \" + num2 + \")\"); // this is for the tooltip\n          plotDataTemp.push(pairArray);\n        }\n        \n      }\n    }\n    this.setState(\n        { plotData: plotDataTemp, dataReady: true }\n    );   \n  }\n\n  getDropdownValue = value => {\n    this.setState(\n        { option1: value }, \n        function () {\n          if (this.state.option1 !== \"\" && this.state.option2 !== \"\") {\n            this.populateArray();\n          }\n        }\n    );\n  }\n\n  getDropdownValue2 = value => {\n    this.setState(\n        { option2: value }, \n        function () {\n          if (this.state.option1 !== \"\" && this.state.option2 !== \"\") {\n            this.populateArray();\n          }\n        }\n    );\n  }\n\n  render() {\n\n    return (\n      <div className='body-container'>\n      \n        <Grid centered columns={1}>\n          <Grid.Column>\n\n            <Segment>\n              <div className='scatter-plot'>\n                {this.state.dataReady && <ScatterChart \n                  dataObjs={this.state.plotData}\n                  x_var={this.state.option1}\n                  y_var={this.state.option2}\n                  display_trend={true} \n                />}\n                {!this.state.dataReady && \n                  <div className='welcome'>\n                    <Message>\n                      <Message.Header>Welcome to the US Counties Correlation Explorer</Message.Header>\n                      <p>\n                        Select two variables from the options below to see their correlation.\n                      </p>\n                    </Message>\n                  </div>\n                }\n              </div>\n            </Segment>\n\n            <div className=\"drop-down\">\n              <DropdownOptions\n                options={this.state.variables}\n                getDropdownValue={this.getDropdownValue.bind(this)}\n              />\n            </div>\n\n            <div className=\"drop-down\">\n              <DropdownOptions2\n                options={this.state.variables2}\n                getDropdownValue2={this.getDropdownValue2.bind(this)}\n              />\n            </div>\n          </Grid.Column>\n        </Grid>\n\n      </div>\n    );\n  }\n}  \n\nexport default App;\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Header, List } from \"semantic-ui-react\";\n\n\n// TODO: Switch to https://github.com/palmerhq/the-platform#stylesheet when it will be stable\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\n\nReactDOM.render(\n\t<App />,\n\tdocument.querySelector('#root')\n);"],"sourceRoot":""}